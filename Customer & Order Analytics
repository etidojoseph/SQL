#  This SQL query analyzes a multi-table database to generate key statistics on customer behavior and order data.
#  The link contains the database used for this project: "https://www.dropbox.com/s/cvsasmtr8syq2c2/BIT_DB?dl=0"

# 1. How many orders were placed in January? 
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6 
AND orderid <> 'Order ID'

#2. How many of those orders were for an iPhone? 
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE Product='iPhone'
AND length(orderid) = 6 
AND orderid <> 'Order ID'

#3. Select the customer account numbers for all the orders that were placed in February. 
SELECT distinct acctnum
FROM BIT_DB.customers cust
INNER JOIN BIT_DB.FebSales Feb
ON cust.order_id=FEB.orderid
WHERE length(orderid) = 6 
AND orderid <> 'Order ID'

#4. Which product was the cheapest one sold in January, and what was the price? 
SELECT distinct Product, price
FROM BIT_DB.JanSales
WHERE  price in (SELECT min(price) FROM BIT_DB.JanSales)

#5. What is the total revenue for each product sold in January?
SELECT Product
sum(quantity)*price as revenue
FROM BIT_DB.JanSales
GROUP BY product

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
select
Product
sum(Quantity), 
sum(quantity)*price as revenue
FROM BIT_DB.FebSales 
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product

#7. How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers? 
select 
count(distinct cust.acctnum), 
avg(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE Feb.Quantity > 2
AND length(orderid) = 6 
AND orderid <> 'Order ID'

# List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, SUM(quantity)
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY Product;

# Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
-- This query helps businesses identify locations in New York (NY) with a high volume of sales orders.

SELECT DISTINCT location, COUNT(orderID) AS Total_Orders  --  Counting total orders per location
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%'                                --  Filtering for locations that contain 'NY' (New York)
AND LENGTH(orderid) = 6                                   -- Ensuring valid 6-character order IDs (excludes incomplete data)
AND orderid <> 'Order ID'                                 --  Excluding any incorrect header values from the dataset
GROUP BY location                                         --  Grouping data by location
HAVING COUNT(orderID) > 2;                                -- Selecting only locations with more than 2 orders (high activity areas)

# How many of each type of headphone were sold in February?

-- This query helps identify the total quantity of each type of headphone sold in February.
SELECT SUM(Quantity) AS Total_Quantity,                   -- Summing up the total quantity sold for each product
       Product                                            -- Displaying product names (specific headphone types)
FROM BIT_DB.FebSales  
WHERE Product LIKE '%Headphones%'                         -- Filtering for products that contain "Headphones" in their name
GROUP BY Product;                                         -- Grouping by product type to get sales per headphone model

# What was the average amount spent per account in February? 
SELECT SUM(quantity * price) / COUNT(cust.acctnum) AS Avg_Spending_Per_Account  
FROM BIT_DB.FebSales Feb  
LEFT JOIN BIT_DB.customers cust  
ON FEB.orderid = cust.order_id                      --  Joining sales data with customer accounts  

WHERE LENGTH(orderid) = 6                          
AND orderid <> 'Order ID';                            

# What was the average quantity of products purchased per account in February? 
select sum(quantity)/count(cust.acctnum)
FROM BIT_DB.FebSales Feb

LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id

WHERE length(orderid) = 6 
AND orderid <> 'Order ID'

# Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT product, 
sum(quantity*price)
FROM BIT_DB.JanSales 
GROUP BY product
ORDER BY sum(quantity*price) desc 
LIMIT 1                                   --Selecting the top product with the highest revenue  


